<?php

namespace Proxies\__CG__\Fix\ServicemeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Formularios extends \Fix\ServicemeBundle\Entity\Formularios implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'id', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'cuenta', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'fecha', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'referencia', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'detalle', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'informacionuno', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'informaciondos', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'informaciontres', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'datos', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'tipo', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'razon'];
        }

        return ['__isInitialized__', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'id', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'cuenta', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'fecha', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'referencia', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'detalle', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'informacionuno', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'informaciondos', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'informaciontres', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'datos', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'tipo', '' . "\0" . 'Fix\\ServicemeBundle\\Entity\\Formularios' . "\0" . 'razon'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Formularios $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setPrePersistData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrePersistData', []);

        return parent::setPrePersistData();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCuenta($cuenta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCuenta', [$cuenta]);

        return parent::setCuenta($cuenta);
    }

    /**
     * {@inheritDoc}
     */
    public function getCuenta()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCuenta', []);

        return parent::getCuenta();
    }

    /**
     * {@inheritDoc}
     */
    public function setFecha($fecha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFecha', [$fecha]);

        return parent::setFecha($fecha);
    }

    /**
     * {@inheritDoc}
     */
    public function getFecha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFecha', []);

        return parent::getFecha();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferencia($referencia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferencia', [$referencia]);

        return parent::setReferencia($referencia);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferencia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferencia', []);

        return parent::getReferencia();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetalle($detalle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetalle', [$detalle]);

        return parent::setDetalle($detalle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetalle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetalle', []);

        return parent::getDetalle();
    }

    /**
     * {@inheritDoc}
     */
    public function setInformacionuno($informacionuno)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformacionuno', [$informacionuno]);

        return parent::setInformacionuno($informacionuno);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformacionuno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformacionuno', []);

        return parent::getInformacionuno();
    }

    /**
     * {@inheritDoc}
     */
    public function setInformaciondos($informaciondos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformaciondos', [$informaciondos]);

        return parent::setInformaciondos($informaciondos);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformaciondos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformaciondos', []);

        return parent::getInformaciondos();
    }

    /**
     * {@inheritDoc}
     */
    public function setInformaciontres($informaciontres)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInformaciontres', [$informaciontres]);

        return parent::setInformaciontres($informaciontres);
    }

    /**
     * {@inheritDoc}
     */
    public function getInformaciontres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInformaciontres', []);

        return parent::getInformaciontres();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatos($datos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatos', [$datos]);

        return parent::setDatos($datos);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatos', []);

        return parent::getDatos();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipo(\Fix\ServicemeBundle\Entity\Formulariostipo $tipo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipo', [$tipo]);

        return parent::setTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipo', []);

        return parent::getTipo();
    }

    /**
     * {@inheritDoc}
     */
    public function setRazon(\Fix\ServicemeBundle\Entity\Formulariosrazon $razon = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRazon', [$razon]);

        return parent::setRazon($razon);
    }

    /**
     * {@inheritDoc}
     */
    public function getRazon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRazon', []);

        return parent::getRazon();
    }

}
